
# Problem statement

""" For a given a string expression containing only round brackets or parentheses, check if they are balanced or not. Brackets are said to be balanced if the bracket which opens last, closes first.

Example:
Expression: (()())
Since all the opening brackets have their corresponding closing brackets, we say it is balanced and hence the output will be, 'true'.
You need to return a boolean value indicating whether the expression is balanced or not.

Note:
The input expression will not contain spaces in between. """


# solution


def isBalanced(expression):
    stack = []

    for char in expression:
        if char == '(':  # If the character is an opening parenthesis
            stack.append(char)
        elif char == ')':  # If the character is a closing parenthesis
            if stack:  # Check if the stack is not empty
                stack.pop()  # Pop the opening parenthesis
            else:
                return False  # If the stack is empty, it means no matching '('

    return not stack  # If the stack is empty, the parentheses are balanced


str = input()
print(isBalanced(str))

