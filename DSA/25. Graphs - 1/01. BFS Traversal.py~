
# Problem statement

""" Given an undirected and disconnected graph G(V, E), print its BFS traversal.

Note:

1. Here you need to consider that you need to print BFS path starting from vertex 0 only.
2. V is the number of vertices present in graph G and vertices are numbered from 0 to V-1.
3. E is the number of edges present in graph G.
4. Take graph input in the adjacency matrix.
5. Handle for Disconnected Graphs as well """


# Solution


def bfs_traversal(adj_matrix, V):
    visited = [False] * V
    q = []

    for i in range(len(adj_matrix)):
        for j in range(len(adj_matrix[0])):
            if adj_matrix[i][j] == 1 and visited[i]:
                visited[i] = True
                q.append(adj_matrix[i][j])

                while len(q) > 0:
                    curr = q.pop(0)




V, E = map(int, input().split())
adj_matrix = [[0] * V for _ in range(V)]

for _ in range(E):
    u, v = map(int, input().split())
    adj_matrix[u][v] = 1
    adj_matrix[v][u] = 1  # Since it's an undirected graph

bfs_traversal(adj_matrix, V)
